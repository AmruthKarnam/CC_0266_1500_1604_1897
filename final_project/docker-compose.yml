version: '3.1'

services:
  rabbitmq:
    container_name: "rabbitmq"
    hostname: "rabbitmq"
    ports:  
         - "15672:15672"  
         - "5672:5672"     
    labels:       
       NAME: "rabbitmq"
    image: rabbitmq:3.8.3-alpine

  master:
    container_name: "master"
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 20 && python master.py"
    ports:
      - "8001:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure

  slave:
    container_name: "slave"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    ports:
      - "8002:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure
  
  slave2:
    container_name: "slave2"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    ports:
      - "8005:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure

  slave3:
    container_name: "slave3"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    ports:
      - "8006:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure

  slave4:
    container_name: "slave4"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    ports:
      - "8007:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure

  slave5:
    container_name: "slave5"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    ports:
      - "8008:8000"
    volumes:
    - .:/code
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure


  orchestrator:
    container_name: "orchestrator"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python orchestrator.py"
    ports:
      - "8000:8000"
    volumes:
        - .:/code
        - /var/run/docker.sock:/var/run/docker.sock
    links:
    - rabbitmq
    depends_on:
    - rabbitmq
    restart: on-failure 





  
